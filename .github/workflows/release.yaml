name: Go CLI Release

on:
  push:
    tags:
      - 'v*' # Run only for version tags

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true

      - name: Set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: latest
          platform: x64

      - name: Build binary for linux and macos
        run: |
          mkdir -p dist
          ext=""
          CGO_ENABLED=1 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
            go build -o dist/mault-${{ github.ref }}-${{ matrix.goos }}-${{ matrix.goarch }} .

      - name: Build binary for windows
        run: |
          mkdir -p dist
          CGO_ENABLED=1 GOOS=windows \
            go build -o dist/mault-${{ github.ref }}-${{ matrix.goos }}.exe

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}